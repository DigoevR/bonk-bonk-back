openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/user/:
    get:
      operationId: retrieveUser
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: updateUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyUser
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/user/{id}/:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/users/:
    get:
      operationId: listUsers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/match/{id}/:
    get:
      operationId: retrieveMatch
      description: 'Returns details about match via GET, confirms unconfirmed match
        via POST and rejects unconfirmed match via DELETE.

        Details about unconfirmed matches, that are not created by user or awaiting
        confirmation by user return 404.

        Trying to confirm or reject a match that you cannot confirm or reject will
        return 404.'
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
          description: ''
      tags:
      - api
    post:
      operationId: createMatch
      description: 'Returns details about match via GET, confirms unconfirmed match
        via POST and rejects unconfirmed match via DELETE.

        Details about unconfirmed matches, that are not created by user or awaiting
        confirmation by user return 404.

        Trying to confirm or reject a match that you cannot confirm or reject will
        return 404.'
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Match'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Match'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Match'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyMatch
      description: 'Returns details about match via GET, confirms unconfirmed match
        via POST and rejects unconfirmed match via DELETE.

        Details about unconfirmed matches, that are not created by user or awaiting
        confirmation by user return 404.

        Trying to confirm or reject a match that you cannot confirm or reject will
        return 404.'
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/auth/login/:
    post:
      operationId: createLogin
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/auth/logout/:
    post:
      operationId: createLogout
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/auth/logoutall/:
    post:
      operationId: createLogoutAll
      description: 'Log the user out of all sessions

        I.E. deletes all auth tokens for the user'
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/auth/sign-up/:
    post:
      operationId: createRegisterUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegisterUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegisterUser'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterUser'
          description: ''
      tags:
      - api
  /api/auth/check-username/:
    post:
      operationId: createCheckUsername
      description: Validate username field
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/match/:
    post:
      operationId: createMatch
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Match'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Match'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Match'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
          description: ''
      tags:
      - api
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          maxLength: 40
        first_name:
          type: string
          maxLength: 40
        last_name:
          type: string
          maxLength: 40
        paternal_name:
          type: string
          maxLength: 40
        email:
          type: string
          format: email
          maxLength: 254
        elo:
          type: integer
          readOnly: true
      required:
      - username
      - first_name
      - last_name
    Match:
      type: object
      properties:
        match_type:
          enum:
          - 1
          - 3
          - 5
          type: integer
        opponent_id:
          type: integer
          writeOnly: true
        games:
          type: array
          items:
            type: object
            properties:
              my_score:
                type: integer
                maximum: 40
                writeOnly: true
                minimum: 0
              opponents_score:
                type: integer
                maximum: 40
                writeOnly: true
                minimum: 0
              id:
                type: integer
                readOnly: true
              winner:
                type: object
                properties:
                  id:
                    type: integer
                    readOnly: true
                  username:
                    type: string
                    maxLength: 40
                  first_name:
                    type: string
                    maxLength: 40
                  last_name:
                    type: string
                    maxLength: 40
                  paternal_name:
                    type: string
                    maxLength: 40
                  email:
                    type: string
                    format: email
                    maxLength: 254
                  elo:
                    type: integer
                    readOnly: true
                required:
                - username
                - first_name
                - last_name
                readOnly: true
              loser:
                type: object
                properties:
                  id:
                    type: integer
                    readOnly: true
                  username:
                    type: string
                    maxLength: 40
                  first_name:
                    type: string
                    maxLength: 40
                  last_name:
                    type: string
                    maxLength: 40
                  paternal_name:
                    type: string
                    maxLength: 40
                  email:
                    type: string
                    format: email
                    maxLength: 254
                  elo:
                    type: integer
                    readOnly: true
                required:
                - username
                - first_name
                - last_name
                readOnly: true
              winner_score:
                type: string
                readOnly: true
              loser_score:
                type: string
                readOnly: true
            required:
            - my_score
            - opponents_score
        id:
          type: integer
          readOnly: true
        winner:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            username:
              type: string
              maxLength: 40
            first_name:
              type: string
              maxLength: 40
            last_name:
              type: string
              maxLength: 40
            paternal_name:
              type: string
              maxLength: 40
            email:
              type: string
              format: email
              maxLength: 254
            elo:
              type: integer
              readOnly: true
          required:
          - username
          - first_name
          - last_name
          readOnly: true
        loser:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            username:
              type: string
              maxLength: 40
            first_name:
              type: string
              maxLength: 40
            last_name:
              type: string
              maxLength: 40
            paternal_name:
              type: string
              maxLength: 40
            email:
              type: string
              format: email
              maxLength: 254
            elo:
              type: integer
              readOnly: true
          required:
          - username
          - first_name
          - last_name
          readOnly: true
        elo_change:
          type: integer
          readOnly: true
        is_confirmed:
          type: boolean
          readOnly: true
      required:
      - match_type
      - opponent_id
      - games
    RegisterUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          maxLength: 40
        first_name:
          type: string
          maxLength: 40
        last_name:
          type: string
          maxLength: 40
        paternal_name:
          type: string
          maxLength: 40
        email:
          type: string
          format: email
          maxLength: 254
        elo:
          type: integer
          readOnly: true
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
      - username
      - first_name
      - last_name
      - password1
      - password2
